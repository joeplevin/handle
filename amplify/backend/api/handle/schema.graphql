# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY {
  globalAuthRule: AuthRule = {allow: public}
} # FOR TESTING ONLY!
type Supplier @model {
  id: ID!
  name: String!
  email: String!
  phone: String
  address: String
  catalogItems: [CatalogItem] @hasMany
  invoices: [Invoice] @hasMany
  supplierInventoryLinks: [SupplierInventoryLink] @hasMany
}

type CatalogItem @model {
  id: ID!
  supplier: Supplier @belongsTo
  supplierId: ID!
  name: String!
  pricePerUnit: Float
  availableQuantity: Int
  inventoryItems: [InventoryItem] @hasMany
}

type InventoryItem @model {
  id: ID!
  name: String!
  weight: Float
  averagePrice: Float
  catalogItem: CatalogItem @belongsTo
  catalogItemId: ID!
  invoiceItems: [InvoiceItem] @hasMany
  supplierInventoryLinks: [SupplierInventoryLink] @hasMany
  usedInRecipes: [RecipeItem] @hasMany
  waste: [WasteItem] @hasMany
}

type SupplierInventoryLink @model {
  id: ID!
  supplier: Supplier @belongsTo
  supplierId: ID!
  inventoryItem: InventoryItem @belongsTo
  inventoryItemId: ID!
  pricePerUnit: Float
  lastDeliveryDate: AWSDateTime
  deliveryWeight: Float
}

type Invoice @model {
  id: ID!
  supplier: Supplier @belongsTo
  supplierId: ID!
  invoiceNumber: String!
  date: AWSDateTime!
  totalAmount: Float
  imageUrl: String
  items: [InvoiceItem] @hasMany
}

type InvoiceItem @model {
  id: ID!
  invoice: Invoice @belongsTo
  invoiceId: ID!
  inventoryItem: InventoryItem @belongsTo
  inventoryItemId: ID
  name: String!
  totalQuantity: Int
  acceptedQuantity: Int
  weight: Float
  pricePerUnit: Float
  expiryDate: AWSDateTime
  accepted: Boolean!
  rejectionReasons: [RejectionReason] @hasMany
}

type RejectionReason @model {
  id: ID!
  invoiceItem: InvoiceItem @belongsTo
  invoiceItemId: ID!
  reason: String!
}

type Recipe @model {
  id: ID!
  name: String!
  description: String
  preparationTime: Int
  cookingTime: Int
  recipeItems: [RecipeItem] @hasMany
}

type RecipeItem @model {
  id: ID!
  recipe: Recipe @belongsTo
  recipeId: ID!
  inventoryItem: InventoryItem @belongsTo
  inventoryItemId: ID
  quantityUsed: Float
  wasteGenerated: Float
}

type WasteItem @model {
  id: ID!
  inventoryItem: InventoryItem @belongsTo
  inventoryItemId: ID!
  quantity: Float
  date: AWSDateTime
  reason: String
}
