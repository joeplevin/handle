# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
# FOR TESTING ONLY!
type Supplier
  @model
  @auth(rules: [{allow: owner}, {allow: groups, groupsField: "groups"}]) {
  id: ID!
  name: String!
  email: String!
  phone: String
  address: String
  inventoryItems: [InventoryItem] @manyToMany(relationName: "SupplierInventory")
  invoices: [Invoice] @hasMany
  groups: [String]
}

type InventoryItem
  @model
  @auth(rules: [{allow: owner}, {allow: groups, groupsField: "groups"}]) {
  id: ID!
  name: String!
  totalQuantity: Int
  totalWeight: Float
  unitWeight: Float
  unitMeasurement: String
  unitAveragePrice: Float
  invoiceItems: [InvoiceItem] @hasMany
  suppliers: [Supplier] @manyToMany(relationName: "SupplierInventory")
  orderList: [OrderList] @manyToMany(relationName: "InventoryItemOrder")
  usedInRecipes: [RecipeItem] @hasMany
  waste: [WasteItem] @hasMany
  groups: [String]
  minQuantity: Int
}

type OrderList
  @model
  @auth(rules: [{allow: owner}, {allow: groups, groupsField: "groups"}]) {
  id: ID!
  name: String!
  inventoryItem: [InventoryItem] @manyToMany(relationName: "InventoryItemOrder")
}

type Invoice
  @model
  @auth(rules: [{allow: owner}, {allow: groups, groupsField: "groups"}]) {
  id: ID!
  supplier: Supplier @belongsTo
  supplierId: ID!
  invoiceNumber: String!
  date: AWSDateTime!
  totalAmount: Float
  imageUrl: String
  items: [InvoiceItem] @hasMany
  groups: [String]
}

type InvoiceItem
  @model
  @auth(rules: [{allow: owner}, {allow: groups, groupsField: "groups"}]) {
  id: ID!
  invoice: Invoice @belongsTo
  invoiceId: ID!
  inventoryItem: InventoryItem @belongsTo
  inventoryItemId: ID
  name: String!
  totalQuantity: Int
  acceptedQuantity: Int
  unitWeight: Float
  unitMeasurement: String
  pricePerUnit: Float
  expiryDate: AWSDateTime
  accepted: Boolean!
  rejectionReasons: String
  groups: [String]
}

type MenuItem
  @model
  @auth(rules: [{allow: owner}, {allow: groups, groupsField: "groups"}]) {
  id: ID!
  name: String!
  description: String
  price: Float
  recipes: [Recipe] @manyToMany(relationName: "MenuRecipe")
  groups: [String]
}

type PrepList
  @model
  @auth(rules: [{allow: owner}, {allow: groups, groupsField: "groups"}]) {
  id: ID!
  name: String!
  recipes: [Recipe] @manyToMany(relationName: "PrepListRecipe")
  recipeItems: [RecipeItem] @manyToMany(relationName: "PrepListRecipeItem")
  groups: [String]
}

type Recipe
  @model
  @auth(rules: [{allow: owner}, {allow: groups, groupsField: "groups"}]) {
  id: ID!
  name: String!
  description: String
  preparationTime: Int
  cookingTime: Int
  recipeItems: [RecipeItem] @manyToMany(relationName: "RecipeRecipeItem")
  prepList: [PrepList] @manyToMany(relationName: "PrepListRecipe")
  menuItems: [MenuItem] @manyToMany(relationName: "MenuRecipe")
  groups: [String]
  minQuantity: Int
}

type RecipeItem
  @model
  @auth(rules: [{allow: owner}, {allow: groups, groupsField: "groups"}]) {
  id: ID!
  recipes: [Recipe] @manyToMany(relationName: "RecipeRecipeItem")
  inventoryItem: InventoryItem @belongsTo
  inventoryItemId: ID
  quantityUsed: Float
  prepList: [PrepList] @manyToMany(relationName: "PrepListRecipeItem")
  wasteGenerated: Float
  groups: [String]
}

type WasteItem
  @model
  @auth(rules: [{allow: owner}, {allow: groups, groupsField: "groups"}]) {
  id: ID!
  inventoryItem: InventoryItem @belongsTo
  inventoryItemId: ID!
  quantity: Float
  date: AWSDateTime
  reason: String
  groups: [String]
}
